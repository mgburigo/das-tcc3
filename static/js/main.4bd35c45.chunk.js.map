{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/logo2.PNG","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","assets/images/foto12.png","useToken.js","components/topnav/TopNav.jsx","services/UsuarioService.js","pages/AddUsuario.jsx","components/status-card/StatusCard.jsx","services/CotasAprendizagemService.js","services/DesocupacaoService.js","services/IdhmService.js","services/MunicipioService.js","services/PopulacaoService.js","pages/Dashboard.jsx","services/UploadFileService.js","pages/Uploads.jsx","components/table/Table.jsx","pages/Usuarios.jsx","components/Routes.jsx","contexts/auth.jsx","components/layout/Layout.jsx","services/LoginService.js","pages/Login.jsx","pages/Cadastrar.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","activeItem","sidebar_items","findIndex","item","route","location","pathname","src","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","useState","currMode","setcurrMode","currColor","setcurrColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","onClick","add","setItem","ThemeAction","useToken","tokenString","sessionStorage","userToken","JSON","parse","token","getToken","setToken","login","getLogin","loginToken","stringify","Topnav","logout","React","useCallback","removeItem","window","reload","console","log","curr_user","image","user_image","user","user_menu","content","renderUserMenu","USUARIOS_REST_API_URL","headers","axios","get","usuario","post","idUsuario","put","AddUsuario","nome","setNome","senha","setSenha","email","setEmail","admin","setAdmin","history","useHistory","useParams","header","Authorization","UsuarioService","getUsuarioById","response","data","htmlFor","value","onChange","Checkbox","inputProps","preventDefault","updateUsuario","push","catch","error","saveUsuario","saveorUpdateUsuario","StatusCard","count","COTAS_APRENDIZAGEM_REST_API_URL","municipio","param","sort","params","sinal","delete","TX_DESOCUPACAO_APRENDIZAGEM_REST_API_URL","all","IDHM_APRENDIZAGEM_REST_API_URL","MUNICIPIO_REST_API_URL","POPULACAO_APRENDIZAGEM_REST_API_URL","Dashboard","series","options","chart","height","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","xaxis","categories","chartCotasSegmento","setChartCotasSegmento","seriesDesocupacao","optionsDesocupacao","width","radialBar","offsetY","startAngle","endAngle","hollow","margin","size","show","legend","floating","fontSize","position","offsetX","labels","useSeriesColors","markers","formatter","seriesName","opts","w","globals","seriesIndex","itemMargin","vertical","responsive","breakpoint","style","colors","stroke","tooltip","shared","intersect","chartDesocupacaoMunicipios","setChartDesocupacaoMunicipios","curve","rotate","rotateAlways","tickPlacement","grid","chartPopulacao","setChartPopulacao","stacked","toolbar","zoom","fill","opacity","chartIdhm","setChartIdhm","setLoading","statusCardCotas","setStatusCardCotas","statusCardMunicipios","setStatusCardMunicipios","statusDesocupacao_15_17","setStatusDesocupacao_15_17","statusDesocupacao_18_24","setStatusDesocupacao_18_24","setMunicipio","fetchDataDashboard","a","endpoints","CotasAprendizagemService","getCotasAprendizagemPorSegmento","order","getCotasAprendizagem","MunicipioService","getTotalMunicipios","DesocupacaoService","getTaxaDesocupacao","PopulacaoService","getPopulacao","IdhmService","getIdhm","Promise","endpoint","spread","cotasSegmento","cotasTotal","municipios","desocupacaoSc","desocupacaoAll","populacao","idhm","valores","segmentos","tx_15_17","length","tx_18_24","totalPopulacao","forEach","element","valorPopulacao","idhmRenda","idhmEducacao","idhmLongevidade","message","setOrder","themeReducer","useSelector","label","valor","o","checked","currentTarget","buscarByFiltros","theme","UPLOADFILE_REST_API_URL","formData","fileCode","Input","styled","display","Uploads","tipo","mensagemRetorno","mensagemCotas","setMensagemCotas","limparMensagemCotas","limparMensagemTxDesocupacao","setMensagemTxDesocupacao","limparMensagemPopulacao","setMensagemPopulacao","limparMensagemIdhm","setMensagemIdhm","mensagemPopulacao","mensagemTxDesocupacao","mensagemIdhm","fileCotas","setFileCotas","uriFileCotas","setUriFileCotas","uploadFileCotas","files","FormData","append","UploadService","uploadFile","downloadUri","tipoRetorno","err","processarCotas","UploadFileService","processarFile","zerarCotas","deleteCotasAprendizagem","fileTxDesocupacao","setFileTxDesocupacao","uriFileTxDesocupacao","setUriFileTxDesocupacao","uploadTxDesocupacao","processarTxDesocupacao","zerarTxDesocupacao","deleteTxDesocupacao","filePopulacao","setFilePopulacao","uriFilePopulacao","setUriFilePopulacao","uploadPopulacao","processarPopulacao","zerarPopulacao","deletePopulacao","fileIdhm","setFileIdhm","uriFileIdhm","setUriFileIdhm","uploadIdhm","processarIdhm","zerarIdhm","deleteIdhm","accept","IconButton","variant","component","Button","Alert","onClose","severity","AlertTitle","Table","initDataShow","limit","bodyData","slice","Number","dataShow","setDataShow","pages","range","page","Math","floor","Array","keys","currPage","setCurrPage","headData","renderHead","renderBody","start","end","selectPage","usuariosTableHead","Usuarios","loading","customerList","setCustomerList","getUsuarios","fetchData","Routes","path","exact","AuthContext","createContext","Layout","Provider","authenticated","password","render","TopNav","username","Copyright","Typography","align","Link","href","Date","getFullYear","createTheme","SignIn","mensagem","setMensagem","ThemeProvider","Container","maxWidth","CssBaseline","Box","sx","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","event","LoginService","noValidate","mt","TextField","required","fullWidth","autoComplete","autoFocus","mb","Grid","container","xs","App","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4bd35c45.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const ThemeReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_MODE':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'SET_COLOR':\r\n            return {\r\n                ...state,\r\n                color: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst rootReducer = combineReducers({ThemeReducer})\r\n\r\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/logo2.0192fd5b.PNG\";","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './sidebar.css'\r\n\r\nimport logo from '../../assets/images/logo2.PNG'\r\n\r\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\r\n\r\nconst SidebarItem = props => {\r\n\r\n    const active = props.active ? 'active' : ''\r\n\r\n    return (\r\n        <div className=\"sidebar__item\">\r\n            <div className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span>\r\n                    {props.title}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sidebar = props => {\r\n\r\n    const activeItem = sidebar_items.findIndex(item => item.route === props.location.pathname)\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar__logo\">\r\n                <img src={logo} alt=\"company logo\" />\r\n            </div>\r\n            {\r\n                sidebar_items.map((item, index) => (\r\n                    <Link to={item.route} key={index}>\r\n                        <SidebarItem\r\n                            title={item.display_name}\r\n                            icon={item.icon}\r\n                            active={index === activeItem}\r\n                        />\r\n                    </Link>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, {useRef} from 'react'\r\n\r\nimport './dropdown.css'\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst Dropdown = props => {\r\n\r\n    const dropdown_toggle_el = useRef(null)\r\n    const dropdown_content_el = useRef(null)\r\n\r\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\r\n    \r\n    return (\r\n        <div className='dropdown'>\r\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n                {\r\n                    props.icon ? <i className={props.icon}></i> : ''\r\n                }\r\n                {\r\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\r\n                }\r\n                {\r\n                    props.customToggle ? props.customToggle() : ''\r\n                }\r\n            </button>\r\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n                {\r\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\r\n                }\r\n                {\r\n                    props.renderFooter ? (\r\n                        <div className=\"dropdown__footer\">\r\n                            {props.renderFooter()}\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","const setMode = mode => {\r\n    return {\r\n        type: 'SET_MODE',\r\n        payload: mode\r\n    }\r\n}\r\n\r\nconst setColor = color => {\r\n    return {\r\n        type: 'SET_COLOR',\r\n        payload: color\r\n    }\r\n}\r\n\r\nconst getTheme = () => {\r\n    return {\r\n        type: 'GET_THEME'\r\n    }\r\n}\r\n\r\nconst exportDefault = {\r\n    setColor,\r\n    setMode,\r\n    getTheme\r\n}\r\n\r\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\r\n\r\nimport './thememenu.css'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\n\r\nconst mode_settings = [\r\n    {\r\n        id: 'light',\r\n        name: 'Claro',\r\n        background: 'light-background',\r\n        class: 'theme-mode-light'\r\n    },\r\n    {\r\n        id: 'dark',\r\n        name: 'Escuro',\r\n        background: 'dark-background',\r\n        class: 'theme-mode-dark'\r\n    }\r\n]\r\n\r\nconst color_settings = [\r\n    {\r\n        id: 'blue',\r\n        name: 'Azul',\r\n        background: 'blue-color',\r\n        class: 'theme-color-blue'\r\n    },\r\n    {\r\n        id: 'red',\r\n        name: 'Vermelho',\r\n        background: 'red-color',\r\n        class: 'theme-color-red'\r\n    },\r\n    {\r\n        id: 'cyan',\r\n        name: 'Ciano',\r\n        background: 'cyan-color',\r\n        class: 'theme-color-cyan'\r\n    },\r\n    {\r\n        id: 'green',\r\n        name: 'Verde',\r\n        background: 'green-color',\r\n        class: 'theme-color-green'\r\n    },\r\n    {\r\n        id: 'orange',\r\n        name: 'Laranja',\r\n        background: 'orange-color',\r\n        class: 'theme-color-orange'\r\n    },\r\n]\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst ThemeMenu = () => {\r\n\r\n    const menu_ref = useRef(null)\r\n    const menu_toggle_ref = useRef(null)\r\n\r\n    clickOutsideRef(menu_ref, menu_toggle_ref)\r\n\r\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\r\n\r\n    const closeMenu = () => menu_ref.current.classList.remove('active')\r\n\r\n    const [currMode, setcurrMode] = useState('light')\r\n\r\n    const [currColor, setcurrColor] = useState('blue')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMode = mode => {\r\n        setcurrMode(mode.id)\r\n        localStorage.setItem('themeMode', mode.class)\r\n        dispatch(ThemeAction.setMode(mode.class))\r\n    }\r\n\r\n    const setColor = color => {\r\n        setcurrColor(color.id)\r\n        localStorage.setItem('colorMode', color.class)\r\n        dispatch(ThemeAction.setColor(color.class))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\r\n\r\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\r\n\r\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\r\n\r\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\r\n                <i className='bx bx-palette'></i>\r\n            </button>\r\n            <div ref={menu_ref} className=\"theme-menu\">\r\n                <h4>Configurações</h4>\r\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\r\n                    <i className='bx bx-x'></i>\r\n                </button>\r\n                <div className=\"theme-menu__select\">\r\n                    <span>Modo</span>\r\n                    <ul className=\"mode-list\">\r\n                        {\r\n                            mode_settings.map((item, index) => (\r\n                                <li key={index} onClick={() => setMode(item)}>\r\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\r\n                                        <i className='bx bx-check'></i>\r\n                                    </div>\r\n                                    <span>{item.name}</span>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"theme-menu__select\">\r\n                    <span>Alterar Cor</span>\r\n                    <ul className=\"mode-list\">\r\n                        {\r\n                            color_settings.map((item, index) => (\r\n                                <li key={index} onClick={() => setColor(item)}>\r\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\r\n                                        <i className='bx bx-check'></i>\r\n                                    </div>\r\n                                    <span>{item.name}</span>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeMenu\r\n","export default __webpack_public_path__ + \"static/media/foto12.4e856340.png\";","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n      };\r\n\r\n      const getLogin = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.login\r\n      };\r\n    \r\n      const [token, setToken] = useState(getToken());\r\n\r\n      const [loginToken, setLoginToken] = useState(getLogin());\r\n\r\n      const saveToken = userToken => {\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n      };\r\n\r\n      \r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n    loginToken\r\n  }\r\n}","import React from 'react'\r\n\r\nimport './topnav.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Dropdown from '../dropdown/Dropdown'\r\n\r\nimport ThemeMenu from '../thememenu/ThemeMenu'\r\n\r\nimport user_image from '../../assets/images/foto12.png'\r\n\r\nimport user_menu from '../../assets/JsonData/user_menus.json'\r\nimport useToken from '../../useToken'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst curr_user = {\r\n    display_name: 'Michel Búrigo',\r\n    image: user_image\r\n}\r\n\r\nconst renderNotificationItem = (item, index) => (\r\n    <div className=\"notification-item\" key={index}>\r\n        <i className={item.icon}></i>\r\n        <span>{item.content}</span>\r\n    </div>\r\n)\r\n\r\nconst renderUserToggle = (user) => (\r\n    <div className=\"topnav__right-user\">\r\n        <div className=\"topnav__right-user__image\">\r\n            <img src={user.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"topnav__right-user__name\">\r\n            {user.display_name}\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n\r\nconst renderUserMenu =(item, index, logout) => (\r\n    <Link to='/' key={index}>\r\n        <div className=\"notification-item\" onClick={logout}>\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nconst Topnav = () => {\r\n\r\n    const logout = React.useCallback(\r\n        () => {\r\n            sessionStorage.removeItem('token');\r\n            window.location.reload(false);\r\n        }\r\n      );\r\n\r\n    const loginToken  = useToken().loginToken;\r\n\r\n    if (loginToken) {\r\n        console.log(loginToken)\r\n    }\r\n    const curr_user = {\r\n        display_name: loginToken,\r\n        image: user_image\r\n    }\r\n\r\n    return (\r\n        <div className='topnav'>\r\n            <div className='col-8'></div>\r\n            <div className=\"topnav__right\">\r\n                <div className=\"topnav__right-item\">\r\n                    {/* dropdown here */}\r\n                    <Dropdown\r\n                        customToggle={() => renderUserToggle(curr_user)}\r\n                        contentData={user_menu}\r\n                        renderItems={(item, index) => renderUserMenu(item, index, logout)}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"topnav__right-item\">\r\n                    <ThemeMenu/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topnav\r\n","import axios from 'axios'\r\n\r\nconst USUARIOS_REST_API_URL = 'http://localhost:8080/api/v1/usuarios';\r\n\r\nclass UsuarioService {\r\n\r\n    getUsuarios(headers) {\r\n        return axios.get(USUARIOS_REST_API_URL,headers);\r\n    }\r\n\r\n    saveUsuario(headers, usuario) {\r\n        return axios.post(USUARIOS_REST_API_URL, usuario, headers)\r\n    }\r\n\r\n    getUsuarioById(headers, idUsuario) {\r\n        return axios.get(USUARIOS_REST_API_URL + '/' + idUsuario, headers)\r\n    }\r\n    \r\n    updateUsuario(headers, idUsuario, usuario) {\r\n        return axios.put(USUARIOS_REST_API_URL + '/' + idUsuario, usuario, headers)\r\n    }\r\n    cadastrar(usuario) {\r\n        return axios.post(USUARIOS_REST_API_URL + \"/cadastro\", usuario)\r\n    }\r\n}\r\n\r\nexport default new UsuarioService();\r\n","import React, { useEffect, useState } from 'react'\r\nimport UsuarioService from '../services/UsuarioService'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { Checkbox } from '@mui/material'\r\nimport useToken from '../useToken'\r\n\r\n\r\nconst AddUsuario = () => {\r\n\r\n    const [nome, setNome] = useState('')\r\n    const [senha, setSenha] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [admin, setAdmin] = useState(false)\r\n    const history = useHistory();\r\n    const { idUsuario } = useParams();\r\n\r\n    const token = useToken();\r\n\r\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\n    const toggle = React.useCallback(\r\n        () => setAdmin(!admin),\r\n        [admin, setAdmin],\r\n      );\r\n\r\n    let header = { headers : {\r\n        Authorization: `Bearer ${token.token}`\r\n            }\r\n    }  \r\n\r\n    const saveorUpdateUsuario = (e) => {\r\n        e.preventDefault();\r\n\r\n        const usuario = {nome, senha, email, admin}\r\n\r\n        if (idUsuario) {\r\n            UsuarioService.updateUsuario(header, idUsuario, usuario).then((response) => {\r\n                history.push('/usuarios')\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        } else {\r\n            UsuarioService.saveUsuario(header, usuario).then((response) => {\r\n                console.log(response.data)\r\n                history.push('/usuarios')\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        UsuarioService.getUsuarioById(header, idUsuario).then((response) => {\r\n            setNome(response.data.nome)\r\n            setEmail(response.data.email)\r\n            setAdmin(response.data.admin)\r\n\r\n        })\r\n    }, [])\r\n     \r\n    const titulo = () => {\r\n        if (idUsuario) {\r\n            return <h2 className=\"page-header\">Atualizar Usuário</h2>\r\n        } else {\r\n            return <h2 className=\"page-header\">Cadastrar Usuário</h2>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {titulo()}\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='card col-12'>\r\n                        <div className='card-body'>\r\n                            <form>\r\n                                <div className='add-usuario'>\r\n                                    <label className='col-2' htmlFor=\"\">Nome:</label>\r\n                                    <div className=\"add-usuario_campos  col-10\">\r\n                                    <input \r\n                                            type=\"text\" \r\n                                            name='nome' \r\n                                            \r\n                                            value={nome} \r\n                                            onChange = {(e) => setNome(e.target.value)}  \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='add-usuario'>\r\n                                    <label className='col-2' htmlFor=\"\">Senha:</label>\r\n                                    <div className=\"add-usuario_campos col-10\">\r\n                                    <input \r\n                                            type=\"password\" \r\n                                            name='senha' \r\n                                            className='form-control' \r\n                                            value={senha} \r\n                                            onChange = {(e) => setSenha(e.target.value)}  \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='add-usuario'>\r\n                                    <label className='col-2' htmlFor=\"\">E-mail:</label>\r\n                                    <div className=\"add-usuario_campos col-10\">\r\n                                    <input \r\n                                            type=\"text\" \r\n                                            name='email' \r\n                                            className='form-control' \r\n                                            value={email} \r\n                                            onChange = {(e) => setEmail(e.target.value)}  \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n            \r\n                                <div className='add-usuario'>\r\n                                    <label className='col-2' htmlFor=\"\">Administrador:</label>\r\n                                    <div className=\"checkbox\">\r\n                                    <Checkbox {...label} \r\n                                                color=\"primary\" \r\n                                                name='admin' \r\n                                                value={admin}\r\n                                                onClick={toggle}  \r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                \r\n                                <Link className='button-cadastrar button-primary' onClick={(e) => saveorUpdateUsuario(e)}>Salvar</Link>\r\n                                <Link to=\"/usuarios\" className='button-cadastrar-secundary'>Cancelar</Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUsuario","import React from 'react'\r\n\r\nimport './statuscard.css'\r\n\r\nconst StatusCard = props => {\r\n    return (\r\n        <div className='status-card'>\r\n            <div className=\"status-card__icon\">\r\n                <i className={props.icon}></i>\r\n            </div>\r\n            <div className=\"status-card__info\">\r\n                <h4>{props.count}</h4>\r\n                <span>{props.title}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusCard\r\n","import axios from 'axios'\r\n\r\n\r\nconst COTAS_APRENDIZAGEM_REST_API_URL = 'http://localhost:8080/api/v1/cotaAprendizagem';\r\n\r\nclass CotasAprendizagemService {\r\n\r\n    getCotasAprendizagem(header,municipio) {\r\n        let param = \"\";\r\n\r\n        if (municipio) {\r\n            param = \"?m=\"+municipio;\r\n        }\r\n        return axios.get(COTAS_APRENDIZAGEM_REST_API_URL+param, header);\r\n    }\r\n\r\n    getCotasAprendizagemPorSegmento(header,municipio, sort) {\r\n        let params = \"\"\r\n        if (municipio) {\r\n            params = \"?m=\"+municipio\r\n        }\r\n        if (sort) {\r\n            let sinal = \"?\";\r\n            if (municipio) {\r\n                sinal = \"&\"\r\n            }\r\n            \r\n            params += sinal +\"sort=\"+sort\r\n        }\r\n        return axios.get(COTAS_APRENDIZAGEM_REST_API_URL + \"/totalPorSegmento\"+params, header);\r\n    }\r\n\r\n    deleteCotasAprendizagem(header) {\r\n        return axios.delete(COTAS_APRENDIZAGEM_REST_API_URL,header);\r\n    }\r\n\r\n}\r\n\r\nexport default new CotasAprendizagemService();\r\n","import axios from 'axios'\r\n\r\n\r\nconst TX_DESOCUPACAO_APRENDIZAGEM_REST_API_URL = 'http://localhost:8080/api/v1/taxaDesocupacao';\r\n\r\nclass DesocupacaoService {\r\n\r\n    getTaxaDesocupacao(header, municipio, all, sort) {\r\n        let params = \"?all=\"+all;\r\n        if (municipio) {\r\n            params += \"&m=\"+municipio\r\n        }\r\n        if (sort) {\r\n            params += \"&sort=\"+sort;\r\n        }\r\n        return axios.get(TX_DESOCUPACAO_APRENDIZAGEM_REST_API_URL+params, header);\r\n    }\r\n\r\n    deleteTxDesocupacao(header) {\r\n        return axios.delete(TX_DESOCUPACAO_APRENDIZAGEM_REST_API_URL,header);\r\n    }\r\n\r\n}\r\n\r\nexport default new DesocupacaoService();","import axios from 'axios'\r\n\r\n\r\nconst IDHM_APRENDIZAGEM_REST_API_URL = 'http://localhost:8080/api/v1/idhm';\r\n\r\nclass IdhmService {\r\n\r\n    getIdhm(header, municipio, sort) {\r\n        let params = \"\"\r\n        if (municipio) {\r\n            params = \"?m=\"+municipio\r\n        }\r\n        if (sort) {\r\n            let sinal = \"?\";\r\n            if (municipio) {\r\n                sinal = \"&\"\r\n            }\r\n            \r\n            params += sinal +\"sort=\"+sort\r\n        }\r\n        return axios.get(IDHM_APRENDIZAGEM_REST_API_URL+params, header);\r\n    }\r\n\r\n    deleteIdhm(header) {\r\n        return axios.delete(IDHM_APRENDIZAGEM_REST_API_URL, header);\r\n    }\r\n\r\n}\r\n\r\nexport default new IdhmService();","import axios from 'axios'\r\n\r\nconst MUNICIPIO_REST_API_URL = 'http://localhost:8080/api/v1/municipio';\r\n\r\nclass MunicipioService {\r\n\r\n    getTotalMunicipios(header) {\r\n        return axios.get(MUNICIPIO_REST_API_URL + '/total',header );\r\n    }\r\n}\r\n\r\nexport default new MunicipioService();","import axios from 'axios'\r\n\r\n\r\nconst POPULACAO_APRENDIZAGEM_REST_API_URL = 'http://localhost:8080/api/v1/populacao';\r\n\r\nclass PopulacaoService {\r\n\r\n    getPopulacao(header,municipio, sort) {\r\n        let params = \"\"\r\n        if (municipio) {\r\n            params = \"?m=\"+municipio\r\n        }\r\n        if (sort) {\r\n            let sinal = \"?\";\r\n            if (municipio) {\r\n                sinal = \"&\"\r\n            }\r\n            \r\n            params += sinal +\"sort=\"+sort\r\n        }\r\n        return axios.get(POPULACAO_APRENDIZAGEM_REST_API_URL+params, header);\r\n    }\r\n\r\n    deletePopulacao(header) {\r\n        return axios.delete(POPULACAO_APRENDIZAGEM_REST_API_URL, header);\r\n    }\r\n\r\n}\r\n\r\nexport default new PopulacaoService();","import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\n\r\n//import statusCards from '../assets/JsonData/status-card-data.json'\r\nimport CotasAprendizagemService from '../services/CotasAprendizagemService'\r\nimport DesocupacaoService from '../services/DesocupacaoService'\r\nimport IdhmService from '../services/IdhmService'\r\nimport MunicipioService from '../services/MunicipioService'\r\nimport PopulacaoService from '../services/PopulacaoService'\r\nimport useToken from '../useToken'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n\r\n    const [chartCotasSegmento, setChartCotasSegmento] = useState ({\r\n\r\n        series: [\r\n            {\r\n                name:'Cotas de Aprendizagem',\r\n                data: [333,444,555,666,777]\r\n                /* data: [] */\r\n            }\r\n        ],\r\n    \r\n    \r\n        options: {\r\n            chart: {\r\n              type: 'bar',\r\n              height: 200\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                borderRadius: 4,\r\n                horizontal: true,\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: true\r\n            },\r\n            xaxis: {\r\n              /* categories: [], */\r\n              categories: ['Agricultura', 'Comércio', 'Indústria', 'Serviços', 'Transporte']\r\n            }\r\n        },\r\n\r\n    });\r\n\r\n    const [chartDesocupacao, setChartDesocupacao] = useState ({\r\n\r\n        seriesDesocupacao: [15,7],\r\n        /* seriesDesocupacao: [], */\r\n        optionsDesocupacao: {\r\n            chart: {\r\n                width: 600,\r\n                type: 'radialBar'\r\n            },\r\n            \r\n            plotOptions: {\r\n                radialBar: {\r\n                  offsetY: 0,\r\n                  startAngle: 0,\r\n                  endAngle: 270,\r\n                  hollow: {\r\n                    margin: 5,\r\n                    size: '30%',\r\n                    background: 'transparent',\r\n                    image: undefined,\r\n                  },\r\n                  dataLabels: {\r\n                    name: {\r\n                      show: false,\r\n                    },\r\n                    value: {\r\n                      show: false,\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n           \r\n              legend: {\r\n                show: true,\r\n                floating: true,\r\n                fontSize: '16px',\r\n                position: 'left',\r\n                offsetX: -10,\r\n                offsetY: 30,\r\n                labels: {\r\n                  useSeriesColors: true,\r\n                },\r\n                markers: {\r\n                  size: 0\r\n                },\r\n                formatter: function(seriesName, opts) {\r\n                  return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex] + \"%\"\r\n                },\r\n                itemMargin: {\r\n                  vertical: 3\r\n                }\r\n              },\r\n\r\n            labels: ['15 a 17 anos', '18 a 24 anos'],          \r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                  chart: {\r\n                    width: 100\r\n                  },\r\n                  legend: {\r\n                    position: 'bottom'\r\n                  }\r\n                }\r\n            }]\r\n        }\r\n\r\n    });\r\n\r\n    const [chartDesocupacaoMunicipios, setChartDesocupacaoMunicipios] = useState ({\r\n\r\n        series: [{\r\n            name: '15 e 17 anos',\r\n            data: [44, 55, 41, 64, 22, 43, 21]\r\n          }, {\r\n            name: '18 e 24 anos',\r\n            data: [53, 32, 33, 52, 13, 44, 32]\r\n        }],\r\n         \r\n        options: {\r\n            chart: {\r\n              type: 'bar',\r\n              height: 350\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                horizontal: true,\r\n                dataLabels: {\r\n                  position: 'top',\r\n                },\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: true,\r\n              offsetX: -6,\r\n              style: {\r\n                fontSize: '12px',\r\n                colors: ['#fff']\r\n              }\r\n            },\r\n            stroke: {\r\n              show: true,\r\n              width: 1,\r\n              colors: ['#fff']\r\n            },\r\n            tooltip: {\r\n              shared: true,\r\n              intersect: false\r\n            },\r\n            xaxis: {\r\n                /* categories: ['Abdon Batista', 'Abelardo Luz', 'Agrolância', 'Agronômica', 'Anchieta', 'Alfredo Wagner', 'Florianópolis', 'São José', 'Criciúma'], */\r\n                categories: []\r\n            },\r\n        },\r\n       \r\n\r\n    });\r\n\r\n    const [chartPopulacao, setChartPopulacao] = useState ({\r\n\r\n        series: [{\r\n            name: 'População entre 15 e 24 anos',\r\n            data: [400,170,200,900,360,800,300,910,600]\r\n            /* data: [] */\r\n        }],\r\n        options: {\r\n    \r\n            chart: {\r\n                background: 'transparent',\r\n    \r\n            },\r\n            dataLabels: {\r\n                enabled: true\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['Abdon Batista', 'Abelardo Luz', 'Agrolância', 'Agronômica', 'Anchieta', 'Alfredo Wagner', 'Florianópolis', 'São José', 'Criciúma'],\r\n                /* categories: [], */\r\n                labels: {\r\n                    show: true,\r\n                    rotate: -45,\r\n                    rotateAlways: true,\r\n                },\r\n                tickPlacement: 'on'\r\n    \r\n            },\r\n            legend: {\r\n                position: 'top'\r\n            },\r\n            grid: {\r\n                show: true\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    const [chartIdhm, setChartIdhm] = useState ({\r\n\r\n        \r\n        series: [{\r\n            name: 'IDHM Renda',\r\n            data: [44, 55, 41, 67, 22, 43]\r\n            /* data: [] */\r\n          }, {\r\n            name: 'IDHM Educação',\r\n            data: [13, 23, 20, 8, 13, 27]\r\n            /* data: [] */\r\n          }, {\r\n            name: 'IDHM Longevidade',\r\n            data: [11, 17, 15, 15, 21, 14]\r\n            /* data: [] */\r\n          }],\r\n    \r\n        options: {\r\n    \r\n            chart: {\r\n                type: 'bar',\r\n                height: 150,\r\n                stacked: true,\r\n                toolbar: {\r\n                  show: true\r\n                },\r\n                zoom: {\r\n                  enabled: true\r\n                }\r\n            },\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                  legend: {\r\n                    position: 'bottom',\r\n                    offsetX: -10,\r\n                    offsetY: 0\r\n                  }\r\n                }\r\n            }],\r\n    \r\n            plotOptions: {\r\n                bar: {\r\n                  horizontal: false,\r\n                  borderRadius: 10\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: ['Abdon Batista', 'Abelardo Luz', 'Agrolância', 'Agronômica', 'Anchieta', 'Alfredo Wagner', 'Florianópolis', 'São José', 'Criciúma'],\r\n                /* categories: [], */\r\n                labels: {\r\n                    show: true,\r\n                    rotate: -45,\r\n                    rotateAlways: true,\r\n                },\r\n                tickPlacement: 'on'\r\n            },\r\n            legend: {\r\n                position: 'right',\r\n                offsetY: 20,\r\n                \r\n            },\r\n            grid: {\r\n                show: true\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const [statusCardCotas, setStatusCardCotas] = useState(0);\r\n\r\n    const [statusCardMunicipios, setStatusCardMunicipios] = useState(0);\r\n\r\n    const [statusDesocupacao_15_17, setStatusDesocupacao_15_17] = useState(0);\r\n\r\n    const [statusDesocupacao_18_24, setStatusDesocupacao_18_24] = useState(0)\r\n\r\n    const [municipio, setMunicipio] = useState('');\r\n\r\n    const token = useToken();    \r\n\r\n    const fetchDataDashboard = async () =>{    \r\n        \r\n        try {\r\n            let header = { headers : {\r\n                Authorization: `Bearer ${token.token}`\r\n                }\r\n            };\r\n            let endpoints = [\r\n                CotasAprendizagemService.getCotasAprendizagemPorSegmento(header,municipio,order),\r\n                CotasAprendizagemService.getCotasAprendizagem(header,municipio),\r\n                MunicipioService.getTotalMunicipios(header),\r\n                DesocupacaoService.getTaxaDesocupacao(header,municipio, false, order),\r\n                DesocupacaoService.getTaxaDesocupacao(header,municipio, true, order),\r\n                PopulacaoService.getPopulacao(header,municipio,order),\r\n                IdhmService.getIdhm(header,municipio,order)\r\n            ];\r\n\r\n            Promise.all(endpoints.map((endpoint) => endpoint)).then(\r\n                axios.spread((cotasSegmento, cotasTotal, municipios, desocupacaoSc, desocupacaoAll, populacao, idhm) => {\r\n                   console.log({ cotasSegmento, cotasTotal, municipios, desocupacaoSc, desocupacaoAll, populacao, idhm })\r\n                   if (cotasTotal) {\r\n                        setStatusCardCotas(cotasTotal.data)\r\n                    }\r\n                    if (municipios) {\r\n                        setStatusCardMunicipios(municipios.data)\r\n                    }\r\n                    if (cotasSegmento) {\r\n\r\n                        setChartCotasSegmento({\r\n                            series: [\r\n                                {data: cotasSegmento.data.valores}\r\n                            ],\r\n\r\n                            options: {\r\n                                xaxis: {\r\n                                  categories: cotasSegmento.data.segmentos,\r\n                                }\r\n                            }  \r\n                        })\r\n                    };\r\n                    if (desocupacaoSc) {\r\n                        setStatusDesocupacao_15_17(desocupacaoSc.data.tx_15_17.length > 0 ? desocupacaoSc.data.tx_15_17[0] : 0);\r\n                        setStatusDesocupacao_18_24(desocupacaoSc.data.tx_18_24.length > 0 ? desocupacaoSc.data.tx_18_24[0] : 0);\r\n                    };\r\n                    if (desocupacaoAll) {\r\n                        setChartDesocupacaoMunicipios({\r\n                            series: [\r\n                                {name: '15 e 17 anos',data:desocupacaoAll.data.tx_15_17}\r\n                                ,{name: '18 e 24 anos',data:desocupacaoAll.data.tx_18_24}\r\n                            ],\r\n                            \r\n                            options: {\r\n                                xaxis: {\r\n                                    categories: desocupacaoAll.data.municipio\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    if (populacao) {\r\n                        let municipios = [];\r\n                        let totalPopulacao = [];\r\n                        populacao.data.forEach(element => {\r\n                            municipios.push(element.municipio);\r\n                            totalPopulacao.push(element.valorPopulacao)\r\n                        });\r\n                        /* console.log(populacao) */\r\n\r\n                        setChartPopulacao({\r\n                            series: [{\r\n                                data: totalPopulacao\r\n                            }],\r\n                            options: {\r\n                                xaxis: {\r\n                                    categories: municipios\r\n                                }\r\n                            }\r\n                        })\r\n                    };\r\n                    if (idhm) {\r\n                        setChartIdhm({\r\n                            series: [\r\n                                {data:idhm.data.idhmRenda},\r\n                                {data:idhm.data.idhmEducacao},\r\n                                {data:idhm.data.idhmLongevidade}\r\n                            ],\r\n                            options: {\r\n                                xaxis: {\r\n                                    categories: idhm.data.municipios\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                    }\r\n\r\n                   \r\n                })\r\n                \r\n              );\r\n\r\n        \r\n         \r\n          \r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDataDashboard();\r\n    }, []);\r\n\r\n\r\n    const buscarByFiltros = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetchDataDashboard();\r\n\r\n    };\r\n\r\n\r\n    const orders = [{label:\"nome\",valor: \"nome\"}, {label:\"maior necessidade\", valor: \"maior\"}, {label:\"menor necessidade\", valor: \"menor\"}];\r\n\r\n    const [order, setOrder] = useState(\"nome\");\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <form>  \r\n                <div className='dashboard-search search-dash-card col-12'>        \r\n                  \r\n                    <label htmlFor=\"\">Município</label>\r\n                    <div className=\"topnav__search\">\r\n                        <input type=\"text\"  \r\n                        name='municipio'                     \r\n                        value={municipio} \r\n                        onChange = {(e) => setMunicipio(e.target.value)}  \r\n                        />\r\n                        \r\n                    </div>\r\n                    <label htmlFor=\"\">Ordenação</label>\r\n                    <div className=\"topnav__radio\">\r\n                        \r\n                        {orders.map(o => (\r\n                        <>\r\n                        <label>\r\n                            {o.label}\r\n                        </label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"order\"\r\n                            value={o.valor}\r\n                            checked={order === o.valor}\r\n                            onChange={e => setOrder(e.currentTarget.value)}\r\n                            />{\" \"}\r\n                            \r\n                            </>\r\n                        ))}          \r\n                    </div>\r\n                   \r\n                   <button className='search' \r\n                        onClick={(e) => buscarByFiltros(e)}><i class='bx bx-search'></i>\r\n                    </button>\r\n                   \r\n                \r\n                </div>\r\n            </form>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-3\" >\r\n                            <StatusCard\r\n                                icon={'bx bx-bar-chart-alt'}\r\n                                count={statusCardCotas}\r\n                                title={'Total de Cotas de Aprendizagem '}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-3\" >\r\n                            <StatusCard\r\n                                icon={'bx bxs-city'}\r\n                                count={statusCardMunicipios}\r\n                                title={'Total de Municípios de Santa Catarina' }\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\" >\r\n                            <StatusCard\r\n                                icon={'bx bx-line-chart-down'}\r\n                                count={statusDesocupacao_15_17 + \"%\"}\r\n                                title={'Taxa de Desocupação  entre 15 a 17 anos de Santa Catarina'}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-3\" >\r\n                            <StatusCard\r\n                                icon={'bx bx-line-chart-down'}\r\n                                count={statusDesocupacao_18_24 + \"%\"}\r\n                                title={'Taxa de Desocupação  entre 18 a 24 anos de Santa Catarina'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                         Cotas de Aprendizagem por Segmento Econômico de Santa Catarina\r\n\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartCotasSegmento.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartCotasSegmento.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartCotasSegmento.series}\r\n                            type='bar'\r\n                            height={350}\r\n                            width={700}\r\n                        />\r\n   \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                         Taxa de Desocupação entre 15 e 24 anos por Município    \r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartDesocupacaoMunicipios.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartDesocupacaoMunicipios.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartDesocupacaoMunicipios.series}\r\n                            type='bar'\r\n                            height={350}\r\n                            width={700}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"card full-height\">\r\n                         População entre 15 e 24 anos dos Municípios de Santa Catarina\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartPopulacao.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartPopulacao.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartPopulacao.series}\r\n                            type='bar'\r\n                            height={500}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <div className=\"card full-height\">\r\n                         Índice de Desenvolvimento Humano dos Municípios de Santa Catarina\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartIdhm.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartIdhm.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartIdhm.series}\r\n                            type='line'\r\n                            height={500}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import axios from 'axios'\r\n\r\n\r\nconst UPLOADFILE_REST_API_URL = 'http://localhost:8080/api/v1/upload';\r\n\r\n\r\nclass UploadFileService {\r\n\r\n    uploadFile(header, formData) {\r\n        return axios.post(UPLOADFILE_REST_API_URL, formData, header);\r\n    }\r\n\r\n    processarFile(fileCode, headers) {\r\n        return axios.get(UPLOADFILE_REST_API_URL + fileCode, headers);\r\n    }\r\n\r\n}\r\n\r\nexport default new UploadFileService;","import React, { useEffect, useState } from 'react'\r\nimport { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport UploadService from '../services/UploadFileService';\r\nimport { Alert, AlertTitle } from '@mui/material';\r\nimport UploadFileService from '../services/UploadFileService';\r\nimport CotasAprendizagemService from '../services/CotasAprendizagemService';\r\nimport DesocupacaoService from '../services/DesocupacaoService';\r\nimport PopulacaoService from '../services/PopulacaoService';\r\nimport IdhmService from '../services/IdhmService';\r\nimport useToken from '../useToken';\r\n\r\n\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n  });\r\n\r\nconst Uploads = () => {\r\n\r\n    const [mensagemCotas, setMensagemCotas] = useState({\r\n        tipo: \"\",\r\n        mensagemRetorno: \"\"\r\n    });\r\n\r\n    const limparMensagemCotas = e => {\r\n        setMensagemCotas({\r\n            tipo: \"\",\r\n            mensagemRetorno: \"\"\r\n        })\r\n    } ;\r\n\r\n    const limparMensagemTxDesocupacao = e => {\r\n        setMensagemTxDesocupacao({\r\n            tipo: \"\",\r\n            mensagemRetorno: \"\"\r\n        })\r\n    } ;\r\n    const limparMensagemPopulacao = e => {\r\n        setMensagemPopulacao({\r\n            tipo: \"\",\r\n            mensagemRetorno: \"\"\r\n        })\r\n    } ;\r\n    const limparMensagemIdhm = e => {\r\n        setMensagemIdhm({\r\n            tipo: \"\",\r\n            mensagemRetorno: \"\"\r\n        })\r\n    } ;\r\n\r\n    const [mensagemPopulacao, setMensagemPopulacao] = useState({\r\n        tipo: \"\",\r\n        mensagemRetorno: \"\"\r\n    });\r\n    const [mensagemTxDesocupacao, setMensagemTxDesocupacao] = useState({\r\n        tipo: \"\",\r\n        mensagemRetorno: \"\"\r\n    });\r\n    const [mensagemIdhm, setMensagemIdhm] = useState({\r\n        tipo: \"\",\r\n        mensagemRetorno: \"\"\r\n    });\r\n\r\n    const [fileCotas, setFileCotas] = useState('');\r\n    const [uriFileCotas, setUriFileCotas] = useState('');\r\n\r\n    \r\n    const uploadFileCotas = async e => {\r\n\r\n        setFileCotas(e.target.files[0])\r\n        e.preventDefault();\r\n        console.log(\"Upload COTAS\");\r\n\r\n    };\r\n\r\n    const token = useToken();    \r\n\r\n    let header = { headers : {\r\n        Authorization: `Bearer ${token.token}`\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (fileCotas) {\r\n            const formData = new FormData();\r\n            formData.append('file', fileCotas);\r\n\r\n            UploadService.uploadFile(header, formData)\r\n            .then((response) => {\r\n                console.log(response.data.mensagemRetorno);\r\n                setUriFileCotas(response.data.downloadUri)\r\n                setMensagemCotas({\r\n                    tipo: response.data.tipoRetorno,\r\n                    mensagemRetorno: response.data.mensagemRetorno\r\n                })\r\n            \r\n            }).catch((err) => {\r\n                console.log(err.response.data.mensagemRetorno);\r\n            })\r\n        }\r\n    }, [fileCotas]);\r\n\r\n    const processarCotas = async e => {\r\n        console.log(uriFileCotas)\r\n        const headers = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n                'type-upload': 'COTAS',\r\n                'Authorization': `Bearer ${token.token}`\r\n            }\r\n            \r\n        }\r\n        UploadFileService.processarFile(uriFileCotas, headers).then((response) => {\r\n            setMensagemCotas({\r\n                tipo: response.data.tipoRetorno,\r\n                mensagemRetorno: response.data.mensagemRetorno\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const zerarCotas = async e => {\r\n        \r\n        CotasAprendizagemService.deleteCotasAprendizagem(header).then((response) => {\r\n            setMensagemCotas({\r\n                tipo: \"SUCESSO\",\r\n                mensagemRetorno: \"Tabela Cotas de Aprendizagem Zerada!\"\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    \r\n\r\n    const [fileTxDesocupacao, setFileTxDesocupacao] = useState('');\r\n    const [uriFileTxDesocupacao, setUriFileTxDesocupacao] = useState('');\r\n    \r\n    const uploadTxDesocupacao = async e => {\r\n        setFileTxDesocupacao(e.target.files[0])\r\n        e.preventDefault();\r\n        console.log(\"Upload Taxa de Desocupação\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileTxDesocupacao) {\r\n            const formData = new FormData();\r\n            formData.append('file', fileTxDesocupacao);\r\n\r\n            UploadService.uploadFile(header, formData)\r\n            .then((response) => {\r\n                console.log(response.data.mensagemRetorno);\r\n                setUriFileTxDesocupacao(response.data.downloadUri)\r\n                setMensagemTxDesocupacao({\r\n                tipo: response.data.tipoRetorno,\r\n                mensagemRetorno: response.data.mensagemRetorno\r\n            })\r\n        \r\n            }).catch((err) => {\r\n                console.log(err.response.data.mensagemRetorno);\r\n            })\r\n        }\r\n    }, [fileTxDesocupacao]);\r\n\r\n    const processarTxDesocupacao = async e => {\r\n        console.log(uriFileTxDesocupacao)\r\n        const headers = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n                'type-upload': 'TX-DESOCUPACAO',\r\n                'Authorization': `Bearer ${token.token}`\r\n            }\r\n        }\r\n        UploadFileService.processarFile(uriFileTxDesocupacao, headers).then((response) => {\r\n            setMensagemTxDesocupacao({\r\n                tipo: response.data.tipoRetorno,\r\n                mensagemRetorno: response.data.mensagemRetorno\r\n            })\r\n        })\r\n\r\n    };\r\n\r\n    const zerarTxDesocupacao = async e => {\r\n        \r\n        DesocupacaoService.deleteTxDesocupacao(header).then((response) => {\r\n            setMensagemTxDesocupacao({\r\n                tipo: \"SUCESSO\",\r\n                mensagemRetorno: \"Tabela de Taxa de Desocupação Zerada!\"\r\n            })\r\n        })\r\n\r\n    }\r\n    \r\n    const [filePopulacao, setFilePopulacao] = useState('');\r\n    const [uriFilePopulacao, setUriFilePopulacao] = useState('');\r\n    \r\n    const uploadPopulacao = async e => {\r\n        setFilePopulacao(e.target.files[0])\r\n        e.preventDefault();\r\n        console.log(\"Upload População\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filePopulacao) {\r\n            const formData = new FormData();\r\n            formData.append('file', filePopulacao);\r\n\r\n            UploadService.uploadFile(header, formData)\r\n            .then((response) => {\r\n                console.log(response.data.mensagemRetorno);\r\n                setUriFilePopulacao(response.data.downloadUri)\r\n                setMensagemPopulacao({\r\n                    tipo: response.data.tipoRetorno,\r\n                    mensagemRetorno: response.data.mensagemRetorno\r\n                })\r\n        \r\n        }).catch((err) => {\r\n            console.log(err.response.data.mensagemRetorno);\r\n        })\r\n        }\r\n    }, [filePopulacao]);\r\n\r\n    const processarPopulacao = async e => {\r\n        console.log(uriFilePopulacao)\r\n        const headers = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n                'type-upload': 'POPULACAO',\r\n                'Authorization': `Bearer ${token.token}`\r\n            }\r\n        }\r\n        UploadFileService.processarFile(uriFilePopulacao, headers).then((response) => {\r\n            setMensagemPopulacao({\r\n                tipo: response.data.tipoRetorno,\r\n                mensagemRetorno: response.data.mensagemRetorno\r\n            })\r\n        })\r\n\r\n    };\r\n\r\n    const zerarPopulacao = async e => {\r\n        \r\n        PopulacaoService.deletePopulacao(header).then((response) => {\r\n            setMensagemPopulacao({\r\n                tipo: \"SUCESSO\",\r\n                mensagemRetorno: \"Tabela de População Zerada!\"\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const [fileIdhm, setFileIdhm] = useState('');\r\n    const [uriFileIdhm, setUriFileIdhm] = useState('');\r\n\r\n    const uploadIdhm = async e => {\r\n        setFileIdhm(e.target.files[0])\r\n        e.preventDefault();\r\n        console.log(\"Upload IDHM\");\r\n        \r\n    };\r\n\r\n    useEffect(() => {\r\n        if (fileIdhm) {\r\n            const formData = new FormData();\r\n            formData.append('file', fileIdhm);\r\n\r\n            UploadService.uploadFile(header, formData)\r\n            .then((response) => {\r\n                console.log(response.data.mensagemRetorno);\r\n                setUriFileIdhm(response.data.downloadUri)\r\n                setMensagemIdhm({\r\n                    tipo: response.data.tipoRetorno,\r\n                    mensagemRetorno: response.data.mensagemRetorno\r\n                })\r\n            \r\n            }).catch((err) => {\r\n                console.log(err.response.data.mensagemRetorno);\r\n            })\r\n        }\r\n\r\n    }, [fileIdhm]);\r\n\r\n    const processarIdhm = async e => {\r\n        console.log(uriFileIdhm)\r\n        const headers = {\r\n            'headers': {\r\n                'Content-type': 'application/json',\r\n                'type-upload': 'IDHM',\r\n                'Authorization': `Bearer ${token.token}`\r\n            }\r\n        }\r\n        UploadFileService.processarFile(uriFileIdhm, headers).then((response) => {\r\n            setMensagemIdhm({\r\n                tipo: response.data.tipoRetorno,\r\n                mensagemRetorno: response.data.mensagemRetorno\r\n            })\r\n        })\r\n\r\n    };\r\n\r\n    const zerarIdhm = async e => {\r\n        \r\n        IdhmService.deleteIdhm(header).then((response) => {\r\n            setMensagemIdhm({\r\n                tipo: \"SUCESSO\",\r\n                mensagemRetorno: \"Tabela de IDHM Zerada!\"\r\n            })\r\n        })\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">\r\n                Uploads\r\n            </h2>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='card col-12'>\r\n                        <div className='card-body'>\r\n                            <form className=\"line-upload\" id='form-fileCotas'>\r\n                                <div className='upload'> \r\n                                    <label className='col-3' htmlFor=\"\">Cotas de Aprendizagem por Segmento:</label>\r\n                                    <div className='col-1'>\r\n                                        <label htmlFor=\"contained-button-fileCotas\">\r\n                                            <Input accept=\".csv\" \r\n                                                id=\"contained-button-fileCotas\"  \r\n                                                type=\"file\" \r\n                                                name=\"fileCotas\"\r\n                                                onChange={uploadFileCotas}   \r\n                                            />\r\n                                            <IconButton variant=\"contained\" component=\"span\">                                            \r\n                                                <i class='bx bx-upload'></i>\r\n                                            </IconButton>\r\n                                        </label>\r\n                                        \r\n                                    </div>                 \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"contained\" \r\n                                                onClick={processarCotas} \r\n                                                className='button-cadastrar'>\r\n                                                Processar\r\n                                            </Button>\r\n                                        </div>   \r\n                                    </div>  \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"outlined\" className=\"zerar-button\"\r\n                                                onClick={zerarCotas} >                                                \r\n                                                Zerar\r\n                                            </Button>    \r\n                                        </div>   \r\n                                    </div>                  \r\n                                </div>\r\n                                <div className='upload-feedback'> \r\n                                    <div className=\"file-name-upload col-3\">\r\n                                        <label className=''>{fileCotas.name}</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        {mensagemCotas.tipo === 'SUCESSO' ? <Alert \r\n                                            onClose={limparMensagemCotas} severity=\"success\">\r\n                                            <AlertTitle>{mensagemCotas.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n\r\n                                        {mensagemCotas.tipo === 'ERRO' ? <Alert \r\n                                            onClose={limparMensagemCotas} severity=\"error\">\r\n                                            <AlertTitle>{mensagemCotas.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <form className=\"line-upload\">\r\n                                <div className='upload'> \r\n                                    <label className='col-3' htmlFor=\"\">Taxa de Desocupação:</label>\r\n                                    <div className='col-1'>\r\n                                        <label htmlFor=\"contained-button-fileTxDesocupacao\">\r\n                                            <Input accept=\".csv\" \r\n                                                id=\"contained-button-fileTxDesocupacao\"  \r\n                                                type=\"file\" \r\n                                                name=\"fileTxDesocupacao\"\r\n                                                onChange={uploadTxDesocupacao}   \r\n                                            />\r\n                                            <IconButton variant=\"contained\" component=\"span\">                                            \r\n                                                <i class='bx bx-upload'></i>\r\n                                            </IconButton>\r\n                                        </label>\r\n                                        \r\n                                    </div>                 \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"contained\" \r\n                                                onClick={processarTxDesocupacao} \r\n                                                className='button-cadastrar'>\r\n                                                Processar\r\n                                            </Button>\r\n                                        </div>   \r\n                                    </div>    \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"outlined\" className=\"zerar-button\"\r\n                                                onClick={zerarTxDesocupacao} >                                                \r\n                                                Zerar\r\n                                            </Button>    \r\n                                        </div>   \r\n                                    </div>                 \r\n                                </div>\r\n                                <div className='upload-feedback'> \r\n                                    <div className=\"file-name-upload col-3\">\r\n                                        <label className=''>{fileTxDesocupacao.name}</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        {mensagemTxDesocupacao.tipo === 'SUCESSO' ? <Alert \r\n                                            onClose={limparMensagemTxDesocupacao} severity=\"success\">\r\n                                            <AlertTitle>{mensagemTxDesocupacao.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n\r\n                                        {mensagemTxDesocupacao.tipo === 'ERRO' ? <Alert \r\n                                            onClose={limparMensagemTxDesocupacao} severity=\"error\">\r\n                                            <AlertTitle>{mensagemTxDesocupacao.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <form className=\"line-upload\">\r\n                                <div className='upload'> \r\n                                    <label className='col-3' htmlFor=\"\">População entre 15 e 24 anos:</label>\r\n                                    <div className='col-1'>\r\n                                        <label htmlFor=\"contained-button-filePopulacao\">\r\n                                            <Input accept=\".csv\" \r\n                                                id=\"contained-button-filePopulacao\"  \r\n                                                type=\"file\" \r\n                                                name=\"filePopulacao\"\r\n                                                onChange={uploadPopulacao}   \r\n                                            />\r\n                                            <IconButton variant=\"contained\" component=\"span\">                                            \r\n                                                <i class='bx bx-upload'></i>\r\n                                            </IconButton>\r\n                                        </label>\r\n                                        \r\n                                    </div>                 \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"contained\" \r\n                                                onClick={processarPopulacao} \r\n                                                className='button-cadastrar'>\r\n                                                Processar\r\n                                            </Button>\r\n                                        </div>   \r\n                                    </div>  \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"outlined\" className=\"zerar-button\"\r\n                                                onClick={zerarPopulacao} >                                                \r\n                                                Zerar\r\n                                            </Button>    \r\n                                        </div>   \r\n                                    </div>                  \r\n                                </div>\r\n                                <div className='upload-feedback'> \r\n                                    <div className=\"file-name-upload col-3\">\r\n                                        <label className=''>{filePopulacao.name}</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        {mensagemPopulacao.tipo === 'SUCESSO' ? \r\n                                        <Alert onClose={limparMensagemPopulacao}\r\n                                            severity=\"success\">\r\n                                            <AlertTitle>{mensagemPopulacao.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n\r\n                                        {mensagemPopulacao.tipo === 'ERRO' ? \r\n                                        <Alert severity=\"error\"\r\n                                            onClose={limparMensagemPopulacao}>\r\n                                            <AlertTitle>{mensagemPopulacao.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <form className=\"line-upload\">\r\n                                <div className='upload'> \r\n                                    <label className='col-3' htmlFor=\"\">Índice de Desenvolvimento Humano do Município:</label>\r\n                                    <div className='col-1'>\r\n                                        <label htmlFor=\"contained-button-fileIdhm\">\r\n                                            <Input accept=\".csv\" \r\n                                                id=\"contained-button-fileIdhm\"  \r\n                                                type=\"file\" \r\n                                                name=\"fileIdhm\"\r\n                                                onChange={uploadIdhm}   \r\n                                            />\r\n                                            <IconButton variant=\"contained\" component=\"span\">                                            \r\n                                                <i class='bx bx-upload'></i>\r\n                                            </IconButton>\r\n                                        </label>\r\n                                        \r\n                                    </div>                 \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"contained\" \r\n                                                onClick={processarIdhm} \r\n                                                className='button-cadastrar'>\r\n                                                Processar\r\n                                            </Button>\r\n                                        </div>   \r\n                                    </div>     \r\n                                    <div className='col-4'>                                    \r\n                                        <div className='row button-primary'>\r\n                                            <Button variant=\"outlined\" className=\"zerar-button\"\r\n                                                onClick={zerarIdhm} >                                                \r\n                                                Zerar\r\n                                            </Button>    \r\n                                        </div>   \r\n                                    </div>              \r\n                                </div>\r\n                                <div className='upload-feedback'> \r\n                                    <div className=\"file-name-upload col-3\">\r\n                                        <label className=''>{fileIdhm.name}</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        {mensagemIdhm.tipo === 'SUCESSO' ? \r\n                                        <Alert onClose={limparMensagemIdhm}\r\n                                            severity=\"success\">\r\n                                            <AlertTitle>{mensagemIdhm.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n\r\n                                        {mensagemIdhm.tipo === 'ERRO' ? \r\n                                        <Alert onClose={limparMensagemIdhm}\r\n                                            severity=\"error\">\r\n                                            <AlertTitle>{mensagemIdhm.mensagemRetorno}</AlertTitle>\r\n                                        </Alert>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Uploads","import React, {useState} from 'react'\r\n\r\nimport './table.css'\r\n\r\nconst Table = props => {\r\n\r\n    const initDataShow = props.limit && props.bodyData ? props.bodyData.slice(0, Number(props.limit)) : props.bodyData\r\n\r\n    const [dataShow, setDataShow] = useState(initDataShow)\r\n\r\n    let pages = 1\r\n\r\n    let range = []\r\n\r\n    if (props.limit !== undefined) {\r\n        let page = Math.floor(props.bodyData.length / Number(props.limit))\r\n        pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    const selectPage = page => {\r\n        const start = Number(props.limit) * page\r\n        const end = start + Number(props.limit)\r\n\r\n        setDataShow(props.bodyData.slice(start, end))\r\n\r\n        setCurrPage(page)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"table-wrapper\">\r\n                <table>\r\n                    {\r\n                        props.headData && props.renderHead ? (\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        props.headData.map((item, index) => props.renderHead(item, index))\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        props.bodyData && props.renderBody ? (\r\n                            <tbody>\r\n                                {\r\n                                    dataShow.map((item, index) => props.renderBody(item, index))\r\n                                }\r\n                            </tbody>\r\n                        ) : null\r\n                    }\r\n                </table>\r\n            </div>\r\n            {\r\n                pages > 1 ? (\r\n                    <div className=\"table__pagination\">\r\n                        {\r\n                            range.map((item, index) => (\r\n                                <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\r\n                                    {item + 1}\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import {  Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport Table from '../components/table/Table'\r\nimport UsuarioService from '../services/UsuarioService'\r\nimport useToken from '../useToken'\r\n\r\nconst usuariosTableHead = [\r\n    'id',\r\n    'Nome',\r\n    'Email',\r\n    'Admin',\r\n    'Ações'\r\n]\r\n\r\nconst renderHead = (item, index) => <th key={index}>{item}</th>\r\n\r\nconst renderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.idUsuario}</td>\r\n        <td>{item.nome}</td>\r\n        <td>{item.email}</td>\r\n        <td>{item.admin ? 'Sim' : 'Não'}</td>\r\n        <td>\r\n            <Link className='bx bx-edit-alt icon-1-5rem' to={`/edit-usuario/${item.idUsuario}`} ></Link>\r\n            <Link className='bx bxs-user-x icon-1-5rem' to={`/del-usuario/${item.idUsuario}`} ></Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Usuarios = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [customerList, setCustomerList] = useState([]);\r\n    \r\n    const token = useToken();\r\n  \r\n    useEffect(() => {\r\n\r\n        \r\n        \r\n      const fetchData = async () =>{\r\n        setLoading(true);\r\n        try {\r\n\r\n            let header = { headers : {\r\n                Authorization: `Bearer ${token.token}`\r\n            }\r\n\r\n            }\r\n            await UsuarioService.getUsuarios(header).then(\r\n                (response) => {\r\n                    setCustomerList(response.data);\r\n                }\r\n            );\r\n          \r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n        setLoading(false);\r\n      }\r\n  \r\n      fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">\r\n                Usuários\r\n            </h2>\r\n            {loading && <div>Loading</div>}\r\n\r\n            {!loading && (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\"> \r\n                    <div className='row button-primary'>\r\n                        <Link to=\"/add-usuario\" className='button-cadastrar'>Cadastrar</Link>\r\n                    </div> \r\n                           \r\n                    <div className=\"card\">\r\n                        <div className=\"card__body\">\r\n                            \r\n                            <Table\r\n                                limit='10'\r\n                                headData={usuariosTableHead}\r\n                                renderHead={(item, index) => renderHead(item, index)}\r\n                                bodyData={customerList}\r\n                                renderBody={(item, index) => renderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Usuarios\r\n","import React from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport AddUsuario from '../pages/AddUsuario'\r\n\r\nimport Dashboard from '../pages/Dashboard'\r\nimport Uploads from '../pages/Uploads'\r\nimport Usuarios from '../pages/Usuarios'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={Dashboard}/>\r\n            <Route path='/uploads' component={Uploads}/>\r\n            <Route path='/usuarios' component={Usuarios}/>\r\n            <Route path='/add-usuario' component={AddUsuario}/>\r\n            <Route path='/edit-usuario/:idUsuario' component={AddUsuario}/>\r\n        \r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext();\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport './layout.css'\r\n\r\nimport Sidebar from '../sidebar/Sidebar'\r\nimport TopNav from '../topnav/TopNav'\r\nimport Routes from '../Routes'\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeAction'\r\nimport { AuthContext } from '../../contexts/auth'\r\n\r\nconst Layout = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\r\n\r\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\r\n\r\n        dispatch(ThemeAction.setMode(themeClass))\r\n\r\n        dispatch(ThemeAction.setColor(colorClass))\r\n    }, [dispatch])\r\n\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    const login = (email, password) => {\r\n        console.log('login', {email, password})\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('logout')\r\n    };\r\n\r\n    return (\r\n        <BrowserRouter>\r\n        <AuthContext.Provider value={{authenticated: !!user, user,  login, logout}}>\r\n            <Route render={(props) => (\r\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\r\n                    <Sidebar {...props}/>\r\n                    <div className=\"layout__content\">\r\n                        <TopNav/>\r\n                        <div className=\"layout__content-main\">\r\n                            <Routes/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}/>\r\n        </AuthContext.Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import axios from 'axios'\r\n\r\n\r\nconst LOGIN_REST_API_URL = 'http://localhost:8080/login';\r\n\r\nclass LoginService {\r\n\r\n    login(username, password) {\r\n        let params = {login: username, password: password}\r\n        \r\n        return axios.post(LOGIN_REST_API_URL, params);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new LoginService();","import React, { useState } from \"react\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport LoginService from \"../services/LoginService\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://univali.br\">\r\n        Univali TCC 3\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn({ setToken }) {\r\n\r\n    const [mensagem, setMensagem] = useState(\"\");\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setMensagem(\"\");\r\n\r\n\r\n        const data = new FormData(event.currentTarget);\r\n        console.log({\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n        });\r\n\r\n        try {\r\n            LoginService.login(data.get('email'), data.get('password')).then(\r\n            \r\n                (response) => {\r\n                    console.log(response.data);\r\n                    const token = {\r\n                        login : response.data.login,\r\n                        token: response.data.token\r\n                    }\r\n                    setToken(token)\r\n                }\r\n            ).catch(error => {\r\n                console.log(error.data);\r\n                setMensagem(\"Login ou senha inválidos!\")\r\n            });\r\n            \r\n        } catch (error) {\r\n            console.error(error.message);\r\n        } \r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Entrar\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Entrar\r\n            </Button>\r\n            { mensagem ? <Alert severity=\"error\">{mensagem}</Alert> : \"\" }\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {/* Esqueceu sua senha? */}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href={`/cadastrar`} variant=\"body2\">\r\n                  {\"Não tem uma conta? Inscrever-se\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport UsuarioService from '../services/UsuarioService';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://univali.br\">\r\n        Univali TCC 3\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Cadastrar() {\r\n\r\n  const [nome, setNome] = useState('')\r\n  const [senha, setSenha] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    setNome(data.get('nome'));\r\n    setEmail(data.get('email'));\r\n    setSenha(data.get('password'));\r\n\r\n    event.preventDefault();\r\n\r\n    const usuario = {nome, senha, email}\r\n\r\n    UsuarioService.cadastrar(usuario).then((response) => {\r\n      console.log(response.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    \r\n\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Inscrever-se\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"nome\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"nome\"\r\n                  label=\"Nome\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Já possui uma conta? Entrar\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import Layout from \"./components/layout/Layout\";\r\nimport Login from \"./pages/Login\";\r\nimport Cadastrar from \"./pages/Cadastrar\";\r\nimport useToken from \"./useToken\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const { token, setToken } = useToken();\r\n  if (!token) {\r\n    return <Login setToken={setToken} />\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { createStore } from 'redux'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport rootReducer from './redux/reducers'\r\n\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\r\nimport './assets/css/grid.css'\r\nimport './assets/css/theme.css'\r\nimport './assets/css/index.css'\r\nimport \"./assets/css/styles.css\";\r\n\r\nimport App from './App'\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n)\r\n\r\ndocument.title = 'TCC2 - Dashboard para Aprendizagem Profissional'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}